/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package micole;

import javax.swing.*;
import java.util.*;
import java.io.*;

public class EditClassroomForm extends javax.swing.JFrame {

    ArrayList<School> schools;
    ArrayList<Classroom> classrooms;

    /**
     * Creates new form EditClassroomForm
     */
    public EditClassroomForm() {
        initComponents();

        schools = new ArrayList<>();
        classrooms = new ArrayList<>();
        populateArrayList();

        String[] schoolsArr = new String[schools.size()];
        for (int i = 0; i < schoolsArr.length; i++) {
            schoolsArr[i] = schools.get(i).toString();
        }
        schoolsCb.setModel(new DefaultComboBoxModel<>(schoolsArr));

        String[] classroomsArr = new String[classrooms.size()];
        for (int i = 0; i < classrooms.size(); i++) {
            classroomsArr[i] = classrooms.get(i).toString();
        }
        classroomsCb.setModel(new DefaultComboBoxModel<>(classroomsArr));

        updateTextFields();
    }

    private void saveClassroomsToFile() {
        try {
            FileOutputStream file = new FileOutputStream("Classrooms.dat");
            ObjectOutputStream outputFile = new ObjectOutputStream(file);

            for (int i = 0; i < classrooms.size(); i++) {
                outputFile.writeObject(classrooms.get(i));
            }

            outputFile.close();
            JOptionPane.showMessageDialog(this, "Succesfuly saved");
            this.dispose();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    public void populateArrayList() {
        try {
            FileInputStream file = new FileInputStream("Schools.dat");
            ObjectInputStream inputFile = new ObjectInputStream(file);

            boolean endOfFile = false;
            while (!endOfFile) {
                try {
                    schools.add((School) inputFile.readObject());
                } catch (EOFException e) //END OF FILE exception
                {
                    endOfFile = true;
                } catch (Exception f) {
                    JOptionPane.showMessageDialog(this, f.getMessage());
                }
            }
            inputFile.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        try {
            FileInputStream file = new FileInputStream("Classrooms.dat");
            ObjectInputStream inputFile = new ObjectInputStream(file);

            boolean endOfFile = false;
            while (!endOfFile) {
                try {
                    classrooms.add((Classroom) inputFile.readObject());
                } catch (EOFException e) //END OF FILE exception
                {
                    endOfFile = true;
                } catch (Exception f) {
                    JOptionPane.showMessageDialog(this, f.getMessage());
                }
            }
            inputFile.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void updateTextFields() {
        if (classrooms.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No classrooms to edit :(");
        } else {
            int index = classroomsCb.getSelectedIndex();
            classroomIdTf.setText(classrooms.get(index).getName());
            capacityLabel.setText(classrooms.get(index).getCapacity() + "");
            capacitySlider.setValue(classrooms.get(index).getCapacity());
            idLabel.setText(classrooms.get(index).CLASSROOM_ID + "");
            
            int i = 0;
            while (!classrooms.get(index).getSchool().equals(schools.get(i))) {
                i++;
            }
            schoolsCb.setSelectedIndex(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        classroomIdTf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        capacitySlider = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        schoolsCb = new javax.swing.JComboBox<>();
        classroomsCb = new javax.swing.JComboBox<>();
        capacityLabel = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel1.setText("Edit a classroom by entering the details below:");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        classroomIdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classroomIdTfActionPerformed(evt);
            }
        });

        jLabel2.setText("Classroom ID:");

        jLabel3.setText("Capacity:");

        capacitySlider.setMaximum(101);
        capacitySlider.setMinimum(1);
        capacitySlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                capacitySliderMouseReleased(evt);
            }
        });

        jLabel5.setText("School:");

        schoolsCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        schoolsCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolsCbActionPerformed(evt);
            }
        });

        classroomsCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        classroomsCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classroomsCbActionPerformed(evt);
            }
        });

        capacityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        capacityLabel.setText("0");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        idLabel.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(schoolsCb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classroomIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(capacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(capacityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(classroomsCb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(idLabel))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)))
                .addGap(59, 59, 59))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(231, 231, 231))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classroomsCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classroomIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(capacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(capacityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolsCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classroomIdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classroomIdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classroomIdTfActionPerformed

    private void capacitySliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_capacitySliderMouseReleased
        capacityLabel.setText(capacitySlider.getValue() + "");
    }//GEN-LAST:event_capacitySliderMouseReleased

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        String id = classroomIdTf.getText().trim();
        int capacity = capacitySlider.getValue();
        int classIndex = classroomsCb.getSelectedIndex();
        if (id.isEmpty() || classIndex == -1 || schoolsCb.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please enter all fields");
        } else {
            School school = schools.get(schoolsCb.getSelectedIndex());

            classrooms.get(classIndex).setCapacity(capacity);
            classrooms.get(classIndex).setSchool(school);
            classrooms.get(classIndex).setID(id);

            saveClassroomsToFile();
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void schoolsCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolsCbActionPerformed
        //
    }//GEN-LAST:event_schoolsCbActionPerformed

    private void classroomsCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classroomsCbActionPerformed
        updateTextFields();
    }//GEN-LAST:event_classroomsCbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditClassroomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditClassroomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditClassroomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditClassroomForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditClassroomForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel capacityLabel;
    private javax.swing.JSlider capacitySlider;
    private javax.swing.JTextField classroomIdTf;
    private javax.swing.JComboBox<String> classroomsCb;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> schoolsCb;
    // End of variables declaration//GEN-END:variables
}
